package ihm;

import java.awt.*;
import java.util.*;
import javax.swing.*;
import carte.*;
/**
 *
 * @author Fonteyne
 */
public class PanelZoneCarte extends JPanel {
    // === MODÈLE ===
    private final String nomPirate;
    private int nbCartes = 0;
    private final boolean sens; // false = droite, true = gauche
    
    // === PRÉSENTATION ===
    private boolean grise = false;
    private static final Color COULEUR_NORMALE = Color.WHITE;
    private static final Color COULEUR_GRISEE = Color.LIGHT_GRAY;
    
    // === DIALOGUE ===
    private final CarteListener listener;

    public PanelZoneCarte(String nomPirate, CarteListener listener, boolean sens) {
        this.nomPirate = nomPirate;
        this.listener = listener;
        this.sens = sens;
        
        initUI();
    }

    // ===== PRÉSENTATION =====
    private void initUI() {
        setOpaque(false);
        setLayout(new FlowLayout(sens ? FlowLayout.RIGHT : FlowLayout.LEFT, 10, 10));
    }

    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        Graphics2D g2 = (Graphics2D) g.create();
        
        dessinerContour(g2);
        dessinerSousContour(g2);
        
        g2.dispose();
    }

    private void dessinerContour(Graphics2D g2) {
        g2.setStroke(new BasicStroke(3));
        g2.setColor(grise ? COULEUR_GRISEE : COULEUR_NORMALE);
        
        Dimension zone = getRectangleZone();
        int x = sens ? getWidth() - zone.width - 10 : 10;
        
        g2.drawRoundRect(x, 10, zone.width, zone.height, 20, 20);
    }

    private void dessinerSousContour(Graphics2D g2) {
        g2.setStroke(new BasicStroke(1));
        g2.setColor(Color.LIGHT_GRAY);
        
        Dimension zone = getRectangleZone();
        int x = sens ? getWidth() - zone.width - 10 : 10;
        
        g2.drawRoundRect(x + 3, 13, zone.width - 6, zone.height - 6, 16, 16);
    }

    // ===== DIALOGUE =====
    @Override
    public Component add(Component comp) {
        nbCartes ++;
        if(nbCartes <= 3){
            super.add(comp); //Appel à la méthode add de JPanel
        }else{
            nbCartes--;
        }
         
        repaint();
        PanelCarte panelCarte = (PanelCarte) comp;
        if (listener != null) {
            listener.onCarteJouee(panelCarte.getCarte());
        } else {
            System.err.println("Aucun listener défini !");
        }
        return comp;
    }

    // ===== API PUBLIQUE =====
    public void setGrise(boolean grise) {
        this.grise = grise;
        repaint();
    }

    public Dimension getRectangleZone() {
        int cardCount = Math.max(1, nbCartes);
        return new Dimension(cardCount * 169 - 21, getHeight() - 21);
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
