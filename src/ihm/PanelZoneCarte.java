/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ihm;

import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.FontFormatException;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.GraphicsEnvironment;
import java.awt.RenderingHints;
import java.awt.Shape;
import java.awt.geom.RoundRectangle2D;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;

/**
 *
 * @author Fonteyne
 */
public class PanelZoneCarte extends javax.swing.JPanel {
    private String nomPirate;
    private boolean grise = false;
    private CarteListener listener;
    private int nbCartes = 0;
    private boolean sens; //false = droite, true = gauche
    public PanelZoneCarte(String nomPirate, CarteListener listener, boolean sens) {
        initComponents();
        this.nomPirate = nomPirate;
        this.listener = listener;
        this.sens = sens;
        setOpaque(false);
        if(!sens){
            setLayout(new FlowLayout(FlowLayout.LEFT, 10, 10));
        }else{
            setLayout(new FlowLayout(FlowLayout.RIGHT, 10, 10));  
        }
    }

    @Override
    public Component add(Component comp) {
        nbCartes ++;
        
        super.add(comp); //Appel à la méthode add de JPanel
        repaint();
        PanelCarte panelCarte = (PanelCarte) comp;
        if (listener != null) {
            listener.onCarteJouee(panelCarte.getCarte());
        } else {
            System.err.println("Aucun listener défini !");
        }
        return comp;
    }
 /*
    public void addCarte(PanelCarte carte) {
        int index = getComponentCount();
        int x = 10 + index * 30;
        int y = 10;
        carte.setBounds(x, y, carte.getPreferredSize().width, carte.getPreferredSize().height);
        if (listener != null) {
            listener.onCarteJouee(carte.getCarte());
        } else {
            System.err.println("Aucun listener défini !");
        }
        add(carte);  // Ajout de la carte dans le panel
        repaint();
    }*/
    
    public void setGrise(Boolean grise){
        this.grise = grise;
        repaint();
    }
    
    public Dimension getRectangleZone() {
        int cardCount = Math.max(1, nbCartes); //minimum 1
        int rectWidth = cardCount * 169 - 21;
        int rectHeight = getHeight() - 21;
        return new Dimension(rectWidth, rectHeight);
    }
    
    
    @Override
    protected void paintComponent(Graphics g) {
        
        super.paintComponent(g);
        Graphics2D g2 = (Graphics2D) g.create();

        g2.setStroke(new BasicStroke(3));
        g2.setColor(grise ? Color.LIGHT_GRAY : Color.WHITE);
        
        Dimension zone = getRectangleZone();
        int rectWidth = zone.width;
        int rectHeight = zone.height;
        int xStart;
        
        if(sens){
            xStart = getWidth() - rectWidth - 10;
        }else{
            xStart = 10;
        }
        int yStart = 10;

        g2.drawRoundRect(xStart, yStart, rectWidth, rectHeight, 20, 20);

        g2.setStroke(new BasicStroke(1));
        g2.setColor(Color.LIGHT_GRAY);
        g2.drawRoundRect(xStart + 3, yStart + 3, rectWidth - 6, rectHeight - 6, 16, 16);
        
        
        

        g2.dispose();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
