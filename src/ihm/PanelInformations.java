/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ihm;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.RenderingHints;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.JOptionPane;
import joueur.Joueur;

/**
 *
 * @author Fonteyne
 */
public class PanelInformations extends javax.swing.JPanel {
    private static Image imageVie;
    private static Image imagePopularite;
    private static Image imageOr;
    private final Joueur joueur;
    private static final int TAILLE_ICONE = 30;
    private static final int ESPACE_HORIZONTAL = 5;
    private static final int ESPACE_VERTICAL = 30;
    
    
    public PanelInformations(Joueur joueur) {
        this.joueur = joueur;
        setBackground(Color.red);
        setOpaque(false);
        setVisible(true);
        
        try {
            imageVie = ImageIO.read(new File("src/ressources/icones/heart_red/heart_red_base.png"));
            imagePopularite = ImageIO.read(new File("src/ressources/icones/star/star_base.png"));
            imageOr = ImageIO.read(new File("src/ressources/icones/or/or.png"));
        } catch (IOException e) {
            System.err.println("Erreur de chargement des images: " + e.getMessage());
            // Gestion d'erreur plus robuste
            JOptionPane.showMessageDialog(null, 
                "Impossible de charger les ressources graphiques", 
                "Erreur", 
                JOptionPane.ERROR_MESSAGE);
        }
        
    }
    
    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        if (imageVie == null || imagePopularite == null || imageOr == null) {
            g.setColor(Color.RED);
            g.drawString("Ressources manquantes !", 10, 10);
            return;
        }

        Graphics2D g2 = (Graphics2D) g.create();
        g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
        //Points de vie (ligne 1)
        for (int i = 0; i < joueur.getPointsDeVie(); i++) {
            g2.drawImage(imageVie, 
                i * (TAILLE_ICONE + ESPACE_HORIZONTAL), 
                0, 
                TAILLE_ICONE, TAILLE_ICONE, this);
        }

        //PopularitÃ© (ligne 2)
        for (int i = 0; i < joueur.getPopularite(); i++) {
            g2.drawImage(imagePopularite, 
                i * (TAILLE_ICONE + ESPACE_HORIZONTAL), 
                ESPACE_VERTICAL, 
                TAILLE_ICONE, TAILLE_ICONE, this);
        }

        //Or (ligne 3)
        for (int i = 0; i < joueur.getOr(); i++) {
            g2.drawImage(imageOr, 
                i * (TAILLE_ICONE + ESPACE_HORIZONTAL), 
                ESPACE_VERTICAL * 2, 
                TAILLE_ICONE, TAILLE_ICONE, this);
        }

        g2.dispose();
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
